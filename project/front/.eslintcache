[{"C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\index.js":"1","C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\App.js":"2","C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\Components\\SignIn\\SignIn.jsx":"3","C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\Components\\SignUp\\SignUp.jsx":"4","C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\Components\\Profile\\Profile.jsx":"5"},{"size":456,"mtime":1612523118617,"results":"6","hashOfConfig":"7"},{"size":1256,"mtime":1613047204002,"results":"8","hashOfConfig":"7"},{"size":4309,"mtime":1612968981408,"results":"9","hashOfConfig":"7"},{"size":5919,"mtime":1612964680121,"results":"10","hashOfConfig":"7"},{"size":11285,"mtime":1613140609841,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1be3hk8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\index.js",[],["26","27"],"C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\App.js",[],"C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\Components\\SignIn\\SignIn.jsx",["28","29","30"],"import React, {useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const changeData = (event) => {\r\n        setData({...data, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const callAPI = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:9000/SignIn\", data)\r\n            .then(myData => {\r\n                    if (myData.data.message === 'Password does not matches!') {\r\n                        alert('Something is wrong');\r\n                    } else {\r\n                        console.log(myData);\r\n                        localStorage.setItem('logIn', myData.data.token);\r\n                    }\r\n                }\r\n            )\r\n            .catch(error => alert(error));\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" onClick={callAPI}>\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={data.email}\r\n                        onChange={(event) => changeData(event)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={data.password}\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => changeData(event)}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={(e) => callAPI(e)}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"SignUp\" variant=\"body2\">\r\n                                Don't have an account?\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\Components\\SignUp\\SignUp.jsx",["31"],"import React, {useEffect, useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction SignUp() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [data, setData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const changeData = (event) => {\r\n        setData({...data, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const callAPI = (e) => {\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:9000/SignUp\", data)\r\n            .then(myData => {\r\n                console.log(myData)\r\n                if (myData.data.message === \"Password does not matches!\") {\r\n                    alert(myData.data.message);\r\n                } else {\r\n                    localStorage.setItem('logIn', myData.data.token);\r\n                    history.push('/profile');\r\n                }\r\n            })\r\n            .catch(error => alert(error))\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                value={data.firstName}\r\n                                onChange={(event) => changeData(event)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                                value={data.lastName}\r\n                                onChange={(event) => changeData(event)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                value={data.email}\r\n                                onChange={(event) => changeData(event)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={data.password}\r\n                                autoComplete=\"current-password\"\r\n                                onChange={(event) => changeData(event)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={e => callAPI(e)}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/SignIn\" variant=\"body2\">\r\n                                Already have an account?\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\Arman\\Desktop\\CMStask\\project\\front\\src\\Components\\Profile\\Profile.jsx",["32"],"import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '300px',\r\n        background: '#547587',\r\n        color: 'white',\r\n        height: '94vh',\r\n        padding: '0 30px',\r\n    },\r\n    btn: {\r\n        width: '50px',\r\n        height: '50px',\r\n        textAlign: 'left !important',\r\n        marginTop: '100px',\r\n        cursor: \"pointer\"\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        height: '50px',\r\n        marginTop: '100px',\r\n        color: \"white\"\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginLeft: '200px',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        width: '700px',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25vh',\r\n    },\r\n    obj: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: '90%',\r\n        margin: '6px',\r\n        justifyContent: 'space-between',\r\n    },\r\n    modalBtn: {\r\n        marginTop: '15px',\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        cursor: 'pointer'\r\n    },\r\n    chooseType: {\r\n        border: 'none',\r\n        backgroundColor: \"#3c3434\",\r\n        width: \"100%\",\r\n        fontSize: \"36px\",\r\n        color: \"white\"\r\n    },\r\n    addBtn: {\r\n        backgroundColor: '#4a4343',\r\n        color: 'white',\r\n        width: '150px',\r\n        fontSize: \"30px\",\r\n        padding: '16px 30px',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        borderRadius: '5px',\r\n        marginTop: \"170px\",\r\n        marginLeft: '-250px',\r\n    },\r\n\r\n    addTagBtn: {\r\n        backgroundColor: '#797171',\r\n        color: 'black',\r\n        width: '127px',\r\n        fontSize: '13px',\r\n        padding: '13px 20px',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        borderRadius: '5px',\r\n        marginTop: \"170px\",\r\n        marginLeft: '-250px'\r\n    },\r\n    header: {\r\n        width: '100%',\r\n    },\r\n    logOutBlock: {\r\n        backgroundColor: \"#547587\",\r\n        width: '100%',\r\n        textAlign: \"right\",\r\n    },\r\n    logOut: {\r\n        border: \"none\",\r\n        textDecoration: \"none\",\r\n        outline: 'none',\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#547587\",\r\n        color: \"white\",\r\n        fontWeight: 'bold',\r\n        textAlign: \"right\",\r\n        marginRight: '50px',\r\n        fontSize: '35px',\r\n        \"&:hover\": {\r\n            backgroundColor: '#576972'\r\n        }\r\n    },\r\n    objBlock: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: \"space-between\",\r\n    },\r\n    createObj: {\r\n        margin: \"10px\"\r\n    }\r\n}));\r\n\r\nfunction Profile() {\r\n    const [userObj, setUserObj] = useState({});\r\n\r\n    const [fieldsObj, setFieldsObj] = useState({});\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [keyObj, setKeyObj] = useState('');\r\n    const [valueObj, setValueObj] = useState('');\r\n    const [typeObj, setTypeObj] = useState('Object');\r\n    const [nameObj, setNameObj] = useState('');\r\n    const [tagsObj, setTagsObj] = useState('');\r\n    const [nestedKey, setNestedKey] = useState('');\r\n    const [nestedValue, setNestedValue] = useState('');\r\n\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const logOut = () => {\r\n        localStorage.removeItem('logIn');\r\n        history.push('');\r\n    }\r\n\r\n    const changeObj = (event) => {\r\n        if (event.target.name === 'key') setKeyObj(event.target.value);\r\n        else if (event.target.name === 'value') setValueObj(event.target.value);\r\n        else if (event.target.name === 'type') {\r\n            setTypeObj(event.target.value);\r\n            setKeyObj('');\r\n            setValueObj('');\r\n        } else if (event.target.name === 'name') setNameObj(event.target.value);\r\n        else if (event.target.name === 'tagsObj') setTagsObj(event.target.value);\r\n        else if (event.target.name === 'nestedKey') setNestedKey(event.target.value)\r\n        else if (event.target.name === 'nestedValue') setNestedValue(event.target.value)\r\n    }\r\n\r\n\r\n    const addFields = () => {\r\n        if (typeObj === \"String\" || typeObj === \"Text\" || typeObj === \"File\") {\r\n            setFieldsObj({...fieldsObj, [keyObj]: valueObj})\r\n        } else if (typeObj === \"Array\") {\r\n            setFieldsObj({...fieldsObj, [keyObj]: valueObj.split(\",\")})\r\n        } else if (typeObj === \"Object\") {\r\n            setFieldsObj({...fieldsObj, [keyObj]: {[nestedKey]: nestedValue}})\r\n        }\r\n    }\r\n\r\n\r\n    const addObj = (e) => {\r\n        setUserObj({...userObj, [nameObj]: {...fieldsObj, tags: tagsObj.split(\",\")}});\r\n        passDataAPI(e);\r\n    }\r\n\r\n    const passDataAPI = (e) => {\r\n        e.preventDefault()\r\n        const data = {[nameObj]: {...fieldsObj, tags: tagsObj.split(\",\")}}\r\n        axios.post(\"http://localhost:9000/profile\", JSON.stringify(data))\r\n            .then(res => null)\r\n            .catch(err => alert(err))\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     passDataAPI()\r\n    // }, [userObj])\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <div className={classes.logOutBlock}>\r\n                    <button className={classes.logOut} onClick={logOut}>Log Out</button>\r\n                </div>\r\n            </header>\r\n            <div className={classes.root}>\r\n                <AddCircleOutlineIcon className={classes.btn} onClick={handleOpen}/>\r\n                <TextField className={classes.input} label=\"Filter\"/>\r\n                <Modal\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    className={classes.modal}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    closeAfterTransition\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}>\r\n                    <Fade in={open}>\r\n                        <div className={classes.paper}>\r\n                            <TextField\r\n                                id=\"standard-full-width\"\r\n                                label=\"Name\"\r\n                                style={{margin: 8}}\r\n                                placeholder=\"Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                name=\"name\"\r\n                                value={nameObj}\r\n                                onChange={changeObj}\r\n                            />\r\n                            <div className={classes.objBlock}>\r\n                                <div className={classes.obj}>\r\n                                    <select className={classes.chooseType} name=\"type\"\r\n                                            onChange={changeObj}>\r\n                                        <option value=\"Object\">Object</option>\r\n                                        <option value=\"String\">String</option>\r\n                                        <option value=\"File\">File</option>\r\n                                        <option value=\"Text\">Text</option>\r\n                                        <option value=\"Array\">Array</option>\r\n                                    </select>\r\n                                    <TextField className={classes.createObj} name=\"key\" label=\"Key\"\r\n                                               value={keyObj}\r\n                                               onChange={changeObj}/>\r\n                                    {typeObj === 'File' ? <input className={classes.createObj} type=\"file\"/>\r\n                                        : typeObj === 'Text' ?\r\n                                            <textarea onChange={changeObj} className={classes.createObj}/>\r\n                                            : typeObj === 'String' ?\r\n                                                <TextField className={classes.createObj} name=\"value\" label=\"Value\"\r\n                                                           value={valueObj}\r\n                                                           onChange={changeObj}/>\r\n                                                : typeObj === 'Object' ?\r\n                                                    <div className={classes.obj}>\r\n                                                        <TextField className={classes.createObj} name=\"nestedKey\"\r\n                                                                   label=\"NestedKey\"\r\n                                                                   value={nestedKey}\r\n                                                                   onChange={changeObj}/>\r\n                                                        <TextField className={classes.createObj} name=\"nestedValue\"\r\n                                                                   label=\"NestedValue\"\r\n                                                                   value={nestedValue}\r\n                                                                   onChange={changeObj}/>\r\n\r\n                                                    </div>\r\n                                                    : typeObj === 'Array' ?\r\n                                                        <TextField name=\"value\" label=\"Value\" value={valueObj}\r\n                                                                   onChange={changeObj} className={classes.createObj}/>\r\n                                                        : null}\r\n                                </div>\r\n                                <div>\r\n                                    <AddCircleOutlineIcon className={classes.modalBtn} onClick={addFields}/>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <TextField className={classes.input} name=\"tagsObj\" placeholder=\"\" label=\"Tags\"\r\n                                           value={tagsObj}\r\n                                           onChange={changeObj}/>\r\n                                <button className={classes.addBtn} onClick={e => addObj(e)}>ADD</button>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n                {/*<div>{JSON.stringify(userObj)}</div>*/}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":16,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},{"ruleId":"37","severity":1,"message":"41","line":13,"column":8,"nodeType":"39","messageId":"40","endLine":13,"endColumn":15},{"ruleId":"37","severity":1,"message":"42","line":38,"column":11,"nodeType":"39","messageId":"40","endLine":38,"endColumn":18},{"ruleId":"37","severity":1,"message":"38","line":1,"column":16,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},{"ruleId":"37","severity":1,"message":"38","line":1,"column":16,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]